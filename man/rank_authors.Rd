% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rank_authors.R
\name{rank_authors}
\alias{rank_authors}
\title{Rank Authors by Number of Publications and Citations}
\usage{
rank_authors(res, n = 20, include_all = FALSE)
}
\arguments{
\item{res}{A list containing Scopus search results.}

\item{n}{An integer specifying the number of top authors to return. Defaults to 20.}

\item{include_all}{A logical value indicating whether to include secondary authors. Defaults to FALSE.}
}
\value{
A tibble with the ranking of authors.
}
\description{
The \code{rank_authors()} function generates a ranking of the top authors
from the provided Scopus search results,
based on the number of publications and total citations.
By setting the \code{include_all = TRUE} option, the function can include
not only the first authors but also all authors of the publications in the ranking.
The output is a tibble with the following columns:
\code{rank} rank of the author,
\code{name} author's name,
\code{n_publications} number of publications,
\code{n_citations} total number of citations,
\code{institution} author's primary institution, and
\code{country} author's country.
}
\examples{
res <- list(
  entries = list(
    list(author = list(
         list(authid = "012345", authname = "Smith J.",
              affiliation = list(list(`affilname` = "University A",
                                      `affiliation-country` = "Country A"))),
         list(authid = "333333", authname = "Doe J.",
              affiliation = list(list(`affilname` = "University B",
                                      `affiliation-country` = "Country B")))),
         `citedby-count` = 10, `prism:coverDate` = "2024-12-01"),
    list(author = list(
         list(authid = "012345", authname = "Smith J.",
              affiliation = list(list(`affilname` = "University A",
                                      `affiliation-country` = "Country A"))),
         list(authid = "987654", authname = "Brown S.",
              affiliation = list(list(`affilname` = "University C",
                                      `affiliation-country` = "Country C")))),
         `citedby-count` = 5, `prism:coverDate` = "2020-12-01")
  )
)
rank_authors(res, n = 20, include_all = FALSE)

}
