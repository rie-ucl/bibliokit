g_bi <- ggraph::ggraph( g, layout = layout ) +
ggraph::geom_edge_link(
ggplot2::aes( width = n/max_n * 3), colour = "gray"),
(
g_bi <- ggraph::ggraph( g, layout = layout ) +
ggraph::geom_edge_link(
ggplot2::aes( width = n/max_n * 3), colour = "gray",
# colour = paste0("gray",100-as.integer(n*100/max_n)) ),
show.legend = FALSE ) +
ggraph::geom_node_point( ggplot2::aes( size = size,
colour = type, fill = type ),
position = ggplot2::position_dodge( width = 0.4 ),
shape = 21, show.legend = FALSE ) +
ggraph::geom_node_text( ggplot2::aes( label = name, hjust = ifelse( type, 1, 0 ),
x = x + ifelse( type, -0.01, 0.01 ) ) ) +
ggplot2::scale_fill_brewer( palette = "Set1", direction = -1, aesthetics = c( "colour", "fill" ) ) +
ggplot2::theme_void()
)
(
g_bi <- ggraph::ggraph( g, layout = layout ) +
ggraph::geom_edge_link(
ggplot2::aes( width = n/max_n * 3,
colour = paste0("gray",100-as.integer(n*100/max_n)) ),
show.legend = FALSE ) +
ggraph::geom_node_point( ggplot2::aes( size = size,
colour = type, fill = type ),
position = ggplot2::position_dodge( width = 0.4 ),
shape = 21, show.legend = FALSE ) +
ggraph::geom_node_text( ggplot2::aes( label = name, hjust = ifelse( type, 1, 0 ),
x = x + ifelse( type, -0.01, 0.01 ) ) ) +
ggplot2::scale_fill_brewer( palette = "Set1", direction = -1, aesthetics = c( "colour", "fill" ) ) +
ggplot2::theme_void()
)
(
g_bi <- ggraph::ggraph( g, layout = layout ) +
ggraph::geom_edge_link(
ggplot2::aes( width = n/max_n * 3,
colour = paste0("gray",70-as.integer(n*70/max_n)) ),
show.legend = FALSE ) +
ggraph::geom_node_point( ggplot2::aes( size = size,
colour = type, fill = type ),
position = ggplot2::position_dodge( width = 0.4 ),
shape = 21, show.legend = FALSE ) +
ggraph::geom_node_text( ggplot2::aes( label = name, hjust = ifelse( type, 1, 0 ),
x = x + ifelse( type, -0.01, 0.01 ) ) ) +
ggplot2::scale_fill_brewer( palette = "Set1", direction = -1, aesthetics = c( "colour", "fill" ) ) +
ggplot2::theme_void()
)
(
g_bi <- ggraph::ggraph( g, layout = layout ) +
ggraph::geom_edge_link(
ggplot2::aes( width = n/max_n * 3,
colour = paste0("gray",80-as.integer(n*80/max_n)) ),
show.legend = FALSE ) +
ggraph::geom_node_point( ggplot2::aes( size = size,
colour = type, fill = type ),
position = ggplot2::position_dodge( width = 0.4 ),
shape = 21, show.legend = FALSE ) +
ggraph::geom_node_text( ggplot2::aes( label = name, hjust = ifelse( type, 1, 0 ),
x = x + ifelse( type, -0.01, 0.01 ) ) ) +
ggplot2::scale_fill_brewer( palette = "Set1", direction = -1, aesthetics = c( "colour", "fill" ) ) +
ggplot2::theme_void()
)
data <- data.frame(
topic = character(),
country = character(),
stringsAsFactors = FALSE
)
for ( entry in res$entries ) {
if ( !is.null( entry$authkeywords ) && !is.null( entry$affiliation ) ) {
keywords <- unlist( strsplit( entry$authkeywords, "\\|") )
keywords <- tolower( trimws( keywords ) )
countries <- unique( sapply( entry$affiliation, function(x) x$`affiliation-country` ) )
countries <- countries[!is.na(countries) & countries != ""]
if ( length( countries ) > 0 && length( keywords ) > 0) {
for ( keyword in keywords ) {
if ( keyword != "" ) {
for ( country in countries) {
if ( country != "" ) {
topics_countries <-
rbind( topics_countries,
data.frame( topic = keyword,
country = country,
stringsAsFactors = FALSE) )
}
}
}
}
}
}
}
topics_countries <- data.frame(
topic = character(),
country = character(),
stringsAsFactors = FALSE
)
for ( entry in res$entries ) {
if ( !is.null( entry$authkeywords ) && !is.null( entry$affiliation ) ) {
keywords <- unlist( strsplit( entry$authkeywords, "\\|") )
keywords <- tolower( trimws( keywords ) )
countries <- unique( sapply( entry$affiliation, function(x) x$`affiliation-country` ) )
countries <- countries[!is.na(countries) & countries != ""]
if ( length( countries ) > 0 && length( keywords ) > 0) {
for ( keyword in keywords ) {
if ( keyword != "" ) {
for ( country in countries) {
if ( country != "" ) {
topics_countries <-
rbind( topics_countries,
data.frame( topic = keyword,
country = country,
stringsAsFactors = FALSE) )
}
}
}
}
}
}
}
topics_countries <- topics_countries |>
dplyr::filter(!is.na(topic) & !is.na(country)) |>
dplyr::distinct()
View(topics_countries)
country_matrix <- topics_countries |>
dplyr::count( topic, country ) |>
dplyr::group_by( topic ) |>
dplyr::mutate( count = n() ) |>
dplyr::ungroup()
country_matrix <- topics_countries |>
dplyr::count( topic, country ) |>
dplyr::group_by( topic ) |>
dplyr::mutate( count = dplyr::n() ) |>
dplyr::ungroup()
country_matrix
country_matrix <- topics_countries |>
dplyr::count( topic, country ) |>
dplyr::group_by( topic ) |>
dplyr::mutate( count = dplyr::n() ) |>
dplyr::ungroup() |>
dplyr::group_by( country ) |>
dplyr::summarise( count = sum( count ) ) |>
tidyr::pivot_wider( names_from = country, values_from = count, values_fill = list( count = 0 ) ) |>
as.data.frame()
country_matrix
View(country_matrix)
# Ensure matrix is square by extracting relevant rows and columns
countries <- rownames( country_matrix )
cooccurrence_matrix <- as.matrix( country_matrix )
cooccurrence_matrix
View(cooccurrence_matrix)
rownames(cooccurrence_matrix) <- countries
colnames(cooccurrence_matrix) <- countries
country_counts <- data %>%
dplyr::count(topic, country) %>%
dplyr::group_by(topic) %>%
dplyr::mutate(count = n()) %>%
dplyr::ungroup() %>%
dplyr::group_by(country) %>%
dplyr::summarise(count = sum(count)) %>%
tidyr::pivot_wider(names_from = country, values_from = count, values_fill = list(count = 0)) %>%
as.data.frame()
country_counts <- data |>
dplyr::count(topic, country) |>
dplyr::group_by(topic) |>
dplyr::mutate(count = n()) |>
dplyr::ungroup() |>
dplyr::group_by(country) |>
dplyr::summarise(count = sum(count)) |>
tidyr::pivot_wider(names_from = country, values_from = count, values_fill = list(count = 0)) |>
as.data.frame()
country_counts <- data |>
dplyr::count(topic, country) |>
dplyr::group_by(topic) |>
dplyr::mutate(count = n()) |>
dplyr::ungroup() |>
dplyr::group_by(country) |>
dplyr::summarise(count = sum(count)) |>
tidyr::pivot_wider(names_from = country, values_from = count, values_fill = list(count = 0)) |>
as.data.frame()
country_counts <- data |>
dplyr::count(topic, country) |>
dplyr::group_by(topic) |>
dplyr::mutate(count = dplyr::n()) |>
dplyr::ungroup() |>
dplyr::group_by(country) |>
dplyr::summarise(count = sum(count)) |>
tidyr::pivot_wider(names_from = country, values_from = count, values_fill = list(count = 0)) |>
as.data.frame()
country_counts <- data |>
dplyr::count(topic, country) |>
dplyr::group_by(topic) |>
dplyr::mutate(count = dplyr::n()) |>
dplyr::ungroup() |>
dplyr::group_by(country) |>
dplyr::summarise(count = sum(count)) |>
tidyr::pivot_wider(names_from = country, values_from = count, values_fill = list(count = 0)) |>
as.data.frame()
country_counts <- topics_countries |>
dplyr::count(topic, country) |>
dplyr::group_by(topic) |>
dplyr::mutate(count = dplyr::n()) |>
dplyr::ungroup() |>
dplyr::group_by(country) |>
dplyr::summarise(count = sum(count)) |>
tidyr::pivot_wider(names_from = country, values_from = count, values_fill = list(count = 0)) |>
as.data.frame()
country_counts
topics_countries |>
dplyr::count( topic, country )
topics_countries
topics_countries |>
dplyr::count( topic, country )
topics_countries |>
dplyr::count( topic, country ) |>
dplyr::group_by( topic )
topics_countries |>
dplyr::count( topic, country ) |>
dplyr::group_by( topic ) |>
dplyr::mutate( count = dplyr::n() )
topics_countries |>
dplyr::count( topic, country )
words_df <- data.frame(
word1 = c("a","b","a","b","c"),
word2 = c("b","a","c","c","a")
)
words_df
co_occur <- words_df |>
count( words1, words2 )
co_occur <- words_df |>
dplyr::count( words1, words2 )
co_occur <- words_df |>
dplyr::count( word1, word2 )
words_df |>
dplyr::count( word1, word2 )
words_df |>
dplyr::count( word1, word2 ) |>
spread( key = word2, value = n, fill = 0 )
words_df |>
dplyr::count( word1, word2 ) |>
dplyr::spread( key = word2, value = n, fill = 0 )
?spread
words_df |>
dplyr::count( word1, word2 ) |>
tidyr::spread( key = word2, value = n, fill = 0 )
topics_countries
topics_countries |>
dplyr::group_by( topic )
topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) )
topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
ungroup()
topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
dplyr::ungroup()
topic_country_matrix <- topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
dplyr::ungroup()
topic_country_matrix |>
unnest( countries )
topic_country_matrix |>
unnest( countries )
topic_country_matrix |>
dplyr::unnest( countries )
?unnest
topic_country_matrix |>
tidyr::unnest( countries )
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic )
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) )
topic_country_matrix
topic_country_matrix <- topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
dplyr::ungroup() |>
dplyr::filter( length( countries ) > 1 )
topic_country_matrix
topic_country_matrix <- topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
dplyr::ungroup() |>
dplyr::mutate( n = length( countries ) )
topic_country_matrix
topic_country_matrix <- topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
dplyr::ungroup() |>
dplyr::mutate( n = lapply( length( countries ) ) )
topic_country_matrix <- topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
dplyr::ungroup() |>
dplyr::rowwise() |>
dplyr::mutate( n = length( countries ) )
topic_country_matrix
topic_country_matrix <- topics_countries |>
dplyr::group_by( topic ) |>
dplyr::summarise( countries = list( country ) ) |>
dplyr::ungroup() |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 )
topic_country_matrix
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) )
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) ) |>
tidyr::unnest( pairs )
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) ) |>
tidyr::unnest( pairs )
topic_country_matrix |>
tidyr::unnest( countries )
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) )
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) ) |>
tidyr::unnest( pairs )
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) ) |>
tidyr::unnest( pairs ) |> pull(pairs)
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) ) |>
tidyr::unnest( pairs ) |> dplyr::pull(pairs)
topic_country_matrix |>
tidyr::unnest( countries ) |>
dplyr::group_by( topic ) |>
dplyr::summarise( pairs = list( combn( countries, 2, simplify = FALSE ) ) ) |>
tidyr::unnest( pairs ) |>
dplyr::count( V1, V2, name = "co-occurrences" )
?tidyr::unnest
topics_countries |>
dplyr::group_by(topic) |>
dplyr::summarise(countries = list(country), .groups = 'drop') |>
dplyr::rowwise() |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
dplyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], name = "co-occurrences") |>
tidyr::pivot_wider(names_from = V2, values_from = co-occurrences, values_fill = list(co-occurrences = 0))
topics_countries |>
dplyr::group_by(topic)
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::mutate(pairs = list(t(combn(countries, 2))))
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 )
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2))))
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
dplyr::unnest(pairs)
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs)
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], name = "co-occurrences")
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs)
topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], topic = topic, name = "co-occurrences" )
country_pairs <- topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], topic = topic, name = "co-occurrences" )
couuntry_pairs |>
tidyr::pivot_wider(names_from = V2, values_from = co-occurrences, values_fill = list(co-occurrences = 0))
country_pairs <- topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], topic = topic, name = "co-occurrences" )
couuntry_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = co-occurrences,
values_fill = list( co-occurrences = 0 ) )
tidyr::pivot_wider( names_from = V2, values_from = co-occurrences,
values_fill = 0 )
couuntry_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = co-occurrences,
values_fill = list( co-occurrences = 0 ) )
couuntry_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = co-occurrences )
country_pairs <- topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], topic = topic, name = "co-occurrences" )
couuntry_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = co-occurrences )
country_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = co-occurrences )
country_pairs <- topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], topic = topic, name = "cooccurrences" )
country_pairs
country_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = cooccur )
country_pairs <- topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], topic = topic, name = "cooccur" )
country_pairs
country_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = cooccur )
?tidyr::pivot_wider
country_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = cooccur, values_fill = 0 )
country_pairs <- topics_countries |>
dplyr::group_by(topic)  |>
dplyr::summarise(countries = list(country), .groups = 'drop')  |>
dplyr::rowwise() |>
dplyr::filter( length( countries ) > 1 ) |>
dplyr::mutate(pairs = list(t(combn(countries, 2)))) |>
tidyr::unnest(pairs) |>
dplyr::count(V1 = pairs[,1], V2 = pairs[,2], name = "cooccur" )
country_pairs |>
tidyr::pivot_wider( names_from = V2, values_from = cooccur, values_fill = 0 )
library(usethis)
library(roxygen2)
library(devtools)
document()
build()
check()
packageVersion(head)
library(usethis)
library(roxygen2)
library(devtools)
document()
build()
check()
load("../../research-dissertation/upgrade/literature_review/bibdata/rscopus-20240731_1354-quantum_computing_2024.rda")
res$entries[[1]]$`prism:coverDate`
document()
build()
check()
library(bibliokit)
