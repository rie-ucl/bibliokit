ggplot2::theme_minimal()
return( plot )
}
plot_country_pairs_trend(res)
#' Plot the trend of top country pairs by publication year, optionally filtering for a specific country
#'
#' This function analyzes and visualizes the trend of the most common country pairs in publications over time.
#' It can also filter the pairs to include only those involving a specific country.
#'
#' @param res List structure containing publication data
#' @param n Number of top country pairs to plot (default is 5)
#' @param target_country Optional; specific country to filter the pairs by (default is NULL)
#' @return A plot object showing the trend of top country pairs by publication year
#' @export
#' @import dplyr
#' @import ggplot2
#' @import purrr
#' @import tidyr
plot_country_pairs_trend <- function( res, n = 5, target_country = NULL ) {
country_pairs <- purrr::map_df( res$entries, function( entry ) {
countries <- entry$affiliation |>
purrr::map( ~ .x$`affiliation-country` ) |>
unlist() |>
na.omit() |>
unique()
if ( length( countries ) < 2 ) {
return( data.frame( year = character(), pair = character() ) )
}
pairs <- combn( countries, 2, simplify = FALSE )
data.frame(
year = substr( entry$`prism:coverDate`, 1, 4 ),
pair = purrr::map_chr( pairs, ~ paste( sort( .x ), collapse = "-" ) )
)
})
if ( !is.null( target_country ) ) {
country_pairs <- country_pairs |>
dplyr::filter( grepl( target_country, pair ) )
}
top_pairs <- country_pairs |>
dplyr::count( pair, sort = TRUE ) |>
dplyr::slice_head( n = n ) |>
dplyr::pull( pair )
filtered_data <- country_pairs |>
dplyr::filter( pair %in% top_pairs ) |>
dplyr::count( year, pair ) |>
tidyr::complete( year, pair, fill = list( n = 0 ) )
plot <- ggplot2::ggplot( filtered_data, ggplot2::aes( x = year, y = n, color = pair, group = pair ) ) +
ggplot2::geom_line( linewidth = 1 ) +
ggplot2::geom_point( size = 3, shape = 21, fill = "white" ) +
ggplot2::geom_text(ggplot2::aes(label = n), vjust = -0.6, size = 3) +
ggplot2::labs( title = "Top Country Pairs by Publication Year", x = "Year", y = "Number of Publications" ) +
ggplot2::theme_minimal()
return( plot )
}
plot_country_pairs_trend(res)
#' Plot the trend of top country pairs by collaboration ratio as a percentage, optionally filtering for a specific country
#'
#' This function analyzes and visualizes the trend of the most common country pairs in publications
#' over time, displaying the collaboration ratio as a percentage instead of the number of publications.
#' It can also filter the pairs to include only those involving a specific country.
#'
#' @param res List structure containing publication data
#' @param n Number of top country pairs to plot (default is 5)
#' @param target_country Optional; specific country to filter the pairs by (default is NULL)
#' @return A plot object showing the trend of top country pairs by collaboration ratio percentage over time
#' @export
#' @import dplyr
#' @import ggplot2
#' @import purrr
#' @import tidyr
plot_country_pairs_collaboration_ratio <- function(res, n = 5, target_country = NULL) {
# Extract country pairs and their publication counts
country_pairs <- purrr::map_df(res$entries, function(entry) {
countries <- entry$affiliation |>
purrr::map(~ .x$`affiliation-country`) |>
unlist() |>
na.omit() |>
unique()
if (length(countries) < 2) {
return(data.frame(year = character(), pair = character()))
}
pairs <- combn(countries, 2, simplify = FALSE)
data.frame(
year = substr(entry$`prism:coverDate`, 1, 4),
pair = purrr::map_chr(pairs, ~ paste(sort(.x), collapse = "-"))
)
})
if (!is.null(target_country)) {
# Filter for pairs involving the target country
country_pairs <- country_pairs |>
dplyr::filter(grepl(target_country, pair))
}
# Calculate the total number of publications for the target country (if specified) or all publications
total_publications <- if (is.null(target_country)) {
country_pairs |> dplyr::count(year) |> dplyr::pull(n) |> sum()
} else {
country_pairs |> dplyr::filter(grepl(target_country, pair)) |> dplyr::count(year) |> dplyr::pull(n) |> sum()
}
# Calculate the count of each pair and the collaboration ratio
filtered_data <- country_pairs |>
dplyr::count(year, pair) |>
tidyr::complete(year, pair, fill = list(n = 0)) |>
dplyr::mutate(collaboration_ratio = (n / total_publications) * 100)
# Select top pairs
top_pairs <- filtered_data |>
dplyr::group_by(pair) |>
dplyr::summarise(total_count = sum(n)) |>
dplyr::arrange(desc(total_count)) |>
dplyr::slice_head(n = n) |>
dplyr::pull(pair)
# Filter data for top pairs
filtered_data <- filtered_data |>
dplyr::filter(pair %in% top_pairs)
# Plot the collaboration ratio over time as a percentage
plot <- ggplot2::ggplot(filtered_data, ggplot2::aes(x = year, y = collaboration_ratio, color = pair, group = pair)) +
ggplot2::geom_line(linewidth = 1) +
ggplot2::geom_point(size = 3, shape = 21, fill = "white") +
ggplot2::geom_text(ggplot2::aes(label = sprintf("%.1f%%", collaboration_ratio)), vjust = -0.6, size = 3) +
ggplot2::labs(title = "Top Country Pairs by Collaboration Ratio (%)", x = "Year", y = "Collaboration Ratio (%)") +
ggplot2::theme_minimal()
return(plot)
}
plot_country_pairs_collaboration_ratio(res)
plot_country_pairs_collaboration_ratio(res, target_country = "United States")
plot_country_pairs_collaboration_ratio(res, target_country = "China")
#' Plot the trend of top country pairs by collaboration ratio as a percentage, optionally filtering for a specific country
#'
#' This function analyzes and visualizes the trend of the most common country pairs in publications
#' over time, displaying the collaboration ratio as a percentage instead of the number of publications.
#' It can also filter the pairs to include only those involving a specific country.
#'
#' @param res List structure containing publication data
#' @param n Number of top country pairs to plot (default is 5)
#' @param target_country Optional; specific country to filter the pairs by (default is NULL)
#' @return A plot object showing the trend of top country pairs by collaboration ratio percentage over time
#' @export
#' @import dplyr
#' @import ggplot2
#' @import purrr
#' @import tidyr
plot_country_pairs_collaboration_ratio <- function( res, n = 5, target_country = NULL ) {
# Extract country pairs and their publication counts
country_pairs <- purrr::map_df( res$entries, function( entry ) {
countries <- entry$affiliation |>
purrr::map( ~ .x$`affiliation-country` ) |>
unlist() |>
na.omit() |>
unique()
if ( length( countries ) < 2 ) {
return( data.frame( year = character(), pair = character() ) )
}
pairs <- combn( countries, 2, simplify = FALSE )
data.frame(
year = substr( entry$`prism:coverDate`, 1, 4 ),
pair = purrr::map_chr( pairs, ~ paste( sort( .x ), collapse = "-" ) )
)
})
if ( !is.null( target_country ) ) {
# Filter for pairs involving the target country
country_pairs <- country_pairs |>
dplyr::filter( grepl( target_country, pair ) )
}
# Calculate the total number of publications for the target country (if specified) or all publications
total_publications <- if ( is.null( target_country ) ) {
country_pairs |> dplyr::count( year ) |> dplyr::pull( n ) |> sum()
} else {
country_pairs |> dplyr::filter( grepl( target_country, pair ) ) |> dplyr::count( year ) |> dplyr::pull( n ) |> sum()
}
# Calculate the count of each pair and the collaboration ratio
filtered_data <- country_pairs |>
dplyr::count( year, pair ) |>
tidyr::complete( year, pair, fill = list( n = 0 ) ) |>
dplyr::mutate( collaboration_ratio = ( n / total_publications ) * 100 )
# Select top pairs
top_pairs <- filtered_data |>
dplyr::group_by( pair ) |>
dplyr::summarise( total_count = sum( n ) ) |>
dplyr::arrange( desc( total_count ) ) |>
dplyr::slice_head( n = n ) |>
dplyr::pull( pair )
# Filter data for top pairs
filtered_data <- filtered_data |>
dplyr::filter( pair %in% top_pairs )
# Plot the collaboration ratio over time as a percentage
plot <- ggplot2::ggplot( filtered_data, ggplot2::aes( x = year, y = collaboration_ratio, color = pair, group = pair ) ) +
ggplot2::geom_line( linewidth = 1, show.legend = FALSE ) +
ggplot2::geom_point( size = 3, shape = 21, fill = "white" ) +
ggplot2::geom_text( ggplot2::aes( label = sprintf( "%.1f%%", collaboration_ratio ) ), vjust = -0.6, size = 3 ) +
ggplot2::labs( title = "Top Country Pairs by Collaboration Ratio (%)", x = "Year", y = "Collaboration Ratio (%)" ) +
ggplot2::theme_minimal()
return( plot )
}
plot_country_pairs_collaboration_ratio(res, target_country = "China")
#' Plot the trend of top country pairs by collaboration ratio as a percentage, optionally filtering for a specific country
#'
#' This function analyzes and visualizes the trend of the most common country pairs in publications
#' over time, displaying the collaboration ratio as a percentage instead of the number of publications.
#' It can also filter the pairs to include only those involving a specific country.
#'
#' @param res List structure containing publication data
#' @param n Number of top country pairs to plot (default is 5)
#' @param target_country Optional; specific country to filter the pairs by (default is NULL)
#' @return A plot object showing the trend of top country pairs by collaboration ratio percentage over time
#' @export
#' @import dplyr
#' @import ggplot2
#' @import purrr
#' @import tidyr
plot_country_pairs_collaboration_ratio <- function( res, n = 5, target_country = NULL ) {
country_pairs <- purrr::map_df( res$entries, function( entry ) {
countries <- entry$affiliation |>
purrr::map( ~ .x$`affiliation-country` ) |>
unlist() |>
na.omit() |>
unique()
if ( length( countries ) < 2 ) {
return( data.frame( year = character(), pair = character() ) )
}
pairs <- combn( countries, 2, simplify = FALSE )
data.frame(
year = substr( entry$`prism:coverDate`, 1, 4 ),
pair = purrr::map_chr( pairs, ~ paste( sort( .x ), collapse = "-" ) )
)
})
if ( !is.null( target_country ) ) {
country_pairs <- country_pairs |>
dplyr::filter( grepl( target_country, pair ) )
}
total_publications <- if ( is.null( target_country ) ) {
country_pairs |> dplyr::count( year ) |> dplyr::pull( n ) |> sum()
} else {
country_pairs |> dplyr::filter( grepl( target_country, pair ) ) |> dplyr::count( year ) |> dplyr::pull( n ) |> sum()
}
filtered_data <- country_pairs |>
dplyr::count( year, pair ) |>
tidyr::complete( year, pair, fill = list( n = 0 ) ) |>
dplyr::mutate( collaboration_ratio = ( n / total_publications ) * 100 )
top_pairs <- filtered_data |>
dplyr::group_by( pair ) |>
dplyr::summarise( total_count = sum( n ) ) |>
dplyr::arrange( desc( total_count ) ) |>
dplyr::slice_head( n = n ) |>
dplyr::pull( pair )
filtered_data <- filtered_data |>
dplyr::filter( pair %in% top_pairs )
plot <- ggplot2::ggplot( filtered_data, ggplot2::aes( x = year, y = collaboration_ratio, color = pair, group = pair ) ) +
ggplot2::geom_line( linewidth = 1 ) +
ggplot2::geom_point( size = 3, shape = 21, fill = "white" ) +
ggplot2::geom_text( ggplot2::aes( label = sprintf( "%.1f%%", collaboration_ratio ) ), vjust = -0.6, size = 3, show.legend = FALSE ) +
ggplot2::labs( title = "Top Country Pairs by Collaboration Ratio (%)", x = "Year", y = "Collaboration Ratio (%)" ) +
ggplot2::theme_minimal()
return( plot )
}
plot_country_pairs_collaboration_ratio(res, target_country = "China")
#' Plot the trend of top country pairs by publication year, optionally filtering for a specific country
#'
#' This function analyzes and visualizes the trend of the most common country pairs in publications over time.
#' It can also filter the pairs to include only those involving a specific country.
#'
#' @param res List structure containing publication data
#' @param n Number of top country pairs to plot (default is 5)
#' @param target_country Optional; specific country to filter the pairs by (default is NULL)
#' @return A plot object showing the trend of top country pairs by publication year
#' @export
#' @import dplyr
#' @import ggplot2
#' @import purrr
#' @import tidyr
plot_country_pairs_trend <- function( res, n = 5, target_country = NULL ) {
country_pairs <- purrr::map_df( res$entries, function( entry ) {
countries <- entry$affiliation |>
purrr::map( ~ .x$`affiliation-country` ) |>
unlist() |>
na.omit() |>
unique()
if ( length( countries ) < 2 ) {
return( data.frame( year = character(), pair = character() ) )
}
pairs <- combn( countries, 2, simplify = FALSE )
data.frame(
year = substr( entry$`prism:coverDate`, 1, 4 ),
pair = purrr::map_chr( pairs, ~ paste( sort( .x ), collapse = "-" ) )
)
})
if ( !is.null( target_country ) ) {
country_pairs <- country_pairs |>
dplyr::filter( grepl( target_country, pair ) )
}
top_pairs <- country_pairs |>
dplyr::count( pair, sort = TRUE ) |>
dplyr::slice_head( n = n ) |>
dplyr::pull( pair )
filtered_data <- country_pairs |>
dplyr::filter( pair %in% top_pairs ) |>
dplyr::count( year, pair ) |>
tidyr::complete( year, pair, fill = list( n = 0 ) )
plot <- ggplot2::ggplot( filtered_data, ggplot2::aes( x = year, y = n, color = pair, group = pair ) ) +
ggplot2::geom_line( linewidth = 1 ) +
ggplot2::geom_point( size = 3, shape = 21, fill = "white" ) +
ggplot2::geom_text( ggplot2::aes(label = n), vjust = -0.6, size = 3, show.legend = FALSE ) +
ggplot2::labs( title = "Top Country Pairs by Publication Year", x = "Year", y = "Number of Publications" ) +
ggplot2::theme_minimal()
return( plot )
}
plot_country_pairs_trend(res, target_country = "Japan")
plot_country_pairs_collaboration_ratio(res, target_country = "Japan")
plot_country_pairs_collaboration_ratio <- function(res, n = 5, target_country = NULL) {
country_pairs <- purrr::map_df(res$entries, function(entry) {
countries <- entry$affiliation |>
purrr::map( ~ .x$`affiliation-country` ) |>
unlist() |>
na.omit() |>
unique()
if (length(countries) < 2) {
return(data.frame(year = character(), pair = character()))
}
pairs <- combn(countries, 2, simplify = FALSE)
data.frame(
year = substr(entry$`prism:coverDate`, 1, 4),
pair = purrr::map_chr(pairs, ~ paste(sort(.x), collapse = "-"))
)
})
if (!is.null(target_country)) {
country_pairs <- country_pairs |>
dplyr::filter(grepl(target_country, pair))
}
filtered_data <- country_pairs |>
dplyr::count(year, pair) |>
tidyr::complete(year, pair, fill = list(n = 0))
total_publications_per_year <- filtered_data |>
dplyr::group_by(year) |>
dplyr::summarise(total_publications = sum(n))
filtered_data <- filtered_data |>
dplyr::left_join(total_publications_per_year, by = "year") |>
dplyr::mutate(collaboration_ratio = (n / total_publications) * 100)
top_pairs <- filtered_data |>
dplyr::group_by(pair) |>
dplyr::summarise(total_count = sum(n)) |>
dplyr::arrange(desc(total_count)) |>
dplyr::slice_head(n = n) |>
dplyr::pull(pair)
filtered_data <- filtered_data |>
dplyr::filter(pair %in% top_pairs)
plot <- ggplot2::ggplot(filtered_data, ggplot2::aes(x = year, y = collaboration_ratio, color = pair, group = pair)) +
ggplot2::geom_line(linewidth = 1) +
ggplot2::geom_point(size = 3, shape = 21, fill = "white") +
ggplot2::geom_text(ggplot2::aes(label = sprintf("%.1f%%", collaboration_ratio)), vjust = -0.6, size = 3, show.legend = FALSE) +
ggplot2::labs(title = "Top Country Pairs by Collaboration Ratio (%)", x = "Year", y = "Collaboration Ratio (%)") +
ggplot2::theme_minimal()
return(plot)
}
plot_country_pairs_collaboration_ratio(res, target_country = "Japan")
plot_country_pairs_collaboration_ratio <- function(res, n = 5, target_country = NULL, type = "line") {
country_pairs <- purrr::map_df(res$entries, function(entry) {
countries <- entry$affiliation |>
purrr::map(~ .x$`affiliation-country`) |>
unlist() |>
na.omit() |>
unique()
if (length(countries) < 2) {
return(data.frame(year = character(), pair = character()))
}
pairs <- combn(countries, 2, simplify = FALSE)
data.frame(
year = substr(entry$`prism:coverDate`, 1, 4),
pair = purrr::map_chr(pairs, ~ paste(sort(.x), collapse = "-"))
)
})
if (!is.null(target_country)) {
country_pairs <- country_pairs |>
dplyr::filter(grepl(target_country, pair))
}
filtered_data <- country_pairs |>
dplyr::count(year, pair) |>
tidyr::complete(year, pair, fill = list(n = 0))
total_publications_per_year <- filtered_data |>
dplyr::group_by(year) |>
dplyr::summarise(total_publications = sum(n))
filtered_data <- filtered_data |>
dplyr::left_join(total_publications_per_year, by = "year") |>
dplyr::mutate(collaboration_ratio = (n / total_publications) * 100)
top_pairs <- filtered_data |>
dplyr::group_by(pair) |>
dplyr::summarise(total_count = sum(n)) |>
dplyr::arrange(desc(total_count)) |>
dplyr::slice_head(n = n) |>
dplyr::pull(pair)
filtered_data <- filtered_data |>
dplyr::filter(pair %in% top_pairs)
plot <- ggplot2::ggplot(filtered_data, ggplot2::aes(x = year, y = collaboration_ratio, fill = pair, group = pair)) +
if (type == "stack") {
ggplot2::geom_area(position = "stack", alpha = 0.6) +
ggplot2::scale_y_continuous(labels = scales::percent_format(scale = 1))
} else {
ggplot2::geom_line(linewidth = 1) +
ggplot2::geom_point(size = 3, shape = 21, fill = "white") +
ggplot2::geom_text(ggplot2::aes(label = sprintf("%.1f%%", collaboration_ratio)), vjust = -0.6, size = 3, show.legend = FALSE)
} +
ggplot2::labs(title = "Top Country Pairs by Collaboration Ratio (%)", x = "Year", y = "Collaboration Ratio (%)") +
ggplot2::theme_minimal()
return(plot)
}
plot_country_pairs_collaboration_ratio(res, target_country = "Japan")
plot_country_pairs_collaboration_ratio <- function(res, n = 5, target_country = NULL, type = "line") {
country_pairs <- purrr::map_df(res$entries, function(entry) {
countries <- entry$affiliation |>
purrr::map(~ .x$`affiliation-country`) |>
unlist() |>
na.omit() |>
unique()
if (length(countries) < 2) {
return(data.frame(year = character(), pair = character()))
}
pairs <- combn(countries, 2, simplify = FALSE)
data.frame(
year = substr(entry$`prism:coverDate`, 1, 4),
pair = purrr::map_chr(pairs, ~ paste(sort(.x), collapse = "-"))
)
})
if (!is.null(target_country)) {
country_pairs <- country_pairs |>
dplyr::filter(grepl(target_country, pair))
}
filtered_data <- country_pairs |>
dplyr::count(year, pair) |>
tidyr::complete(year, pair, fill = list(n = 0))
total_publications_per_year <- filtered_data |>
dplyr::group_by(year) |>
dplyr::summarise(total_publications = sum(n))
filtered_data <- filtered_data |>
dplyr::left_join(total_publications_per_year, by = "year") |>
dplyr::mutate(collaboration_ratio = (n / total_publications) * 100)
top_pairs <- filtered_data |>
dplyr::group_by(pair) |>
dplyr::summarise(total_count = sum(n)) |>
dplyr::arrange(desc(total_count)) |>
dplyr::slice_head(n = n) |>
dplyr::pull(pair)
filtered_data <- filtered_data |>
dplyr::filter(pair %in% top_pairs)
p <- ggplot2::ggplot(filtered_data, ggplot2::aes(x = year, y = collaboration_ratio, fill = pair, group = pair)) +
ggplot2::labs(title = "Top Country Pairs by Collaboration Ratio (%)", x = "Year", y = "Collaboration Ratio (%)") +
ggplot2::theme_minimal()
if (type == "stack") {
p <- p +
ggplot2::geom_area(position = "stack", alpha = 0.6) +
ggplot2::scale_y_continuous(labels = scales::percent_format(scale = 1))
} else {
p <- p +
ggplot2::geom_line(linewidth = 1) +
ggplot2::geom_point(size = 3, shape = 21, fill = "white") +
ggplot2::geom_text(ggplot2::aes(label = sprintf("%.1f%%", collaboration_ratio)), vjust = -0.6, size = 3, show.legend = FALSE)
}
return(p)
}
plot_country_pairs_collaboration_ratio(res, target_country = "Japan")
plot_country_pairs_collaboration_ratio(res, target_country = "Japan", type = "stack")
plot_country_pairs_collaboration_ratio(res, target_country = "Japan")
plot_country_pairs_collaboration_ratio <- function(res, n = 5, target_country = NULL, type = "line") {
country_pairs <- purrr::map_df(res$entries, function(entry) {
countries <- entry$affiliation |>
purrr::map( ~ .x$`affiliation-country` ) |>
unlist() |>
na.omit() |>
unique()
if (length(countries) < 2) {
return(data.frame(year = character(), pair = character()))
}
pairs <- combn(countries, 2, simplify = FALSE)
data.frame(
year = substr(entry$`prism:coverDate`, 1, 4),
pair = purrr::map_chr(pairs, ~ paste(sort(.x), collapse = "-"))
)
})
if (!is.null(target_country)) {
country_pairs <- country_pairs |>
dplyr::filter(grepl(target_country, pair))
}
filtered_data <- country_pairs |>
dplyr::count(year, pair) |>
tidyr::complete(year, pair, fill = list(n = 0))
total_publications_per_year <- filtered_data |>
dplyr::group_by(year) |>
dplyr::summarise(total_publications = sum(n))
filtered_data <- filtered_data |>
dplyr::left_join(total_publications_per_year, by = "year") |>
dplyr::mutate(collaboration_ratio = (n / total_publications) * 100)
top_pairs <- filtered_data |>
dplyr::group_by(pair) |>
dplyr::summarise(total_count = sum(n)) |>
dplyr::arrange(desc(total_count)) |>
dplyr::slice_head(n = n) |>
dplyr::pull(pair)
filtered_data <- filtered_data |>
dplyr::filter(pair %in% top_pairs)
p <- ggplot2::ggplot(filtered_data, ggplot2::aes(x = year, y = collaboration_ratio, color = pair, group = pair)) +
ggplot2::labs(title = "Top Country Pairs by Collaboration Ratio (%)", x = "Year", y = "Collaboration Ratio (%)") +
ggplot2::theme_minimal()
if (type == "stack") {
p <- p +
ggplot2::geom_area(position = "stack", alpha = 0.6) +
ggplot2::scale_y_continuous(labels = scales::percent_format(scale = 1))
} else {
p <- p +
ggplot2::geom_line(linewidth = 1) +
ggplot2::geom_point(size = 3, shape = 21, fill = "white") +
ggplot2::geom_text(ggplot2::aes(label = sprintf("%.1f%%", collaboration_ratio)), vjust = -0.6, size = 3, show.legend = FALSE)
}
return(p)
}
plot_country_pairs_collaboration_ratio(res, target_country = "Japan")
plot_country_pairs_collaboration_ratio(res, target_country = "Japan", type = "stack")
